# =================================================================
#
# Authors: Just van den Broecke <justb4@gmail.com>>
#          Jorge Samuel Mendes de Jesus <jorge.dejesus@geocat.net>
#          Tom Kraldis <tomkralidis@gmail.com>
#
# Copyright (c) 2019 Just van den Broecke
# Copyright (c) 2019 Jorge Samuel Mendes de Jesus
# Copyright (c) 2020 Tom Kralidis
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# =================================================================

server:
    bind:
        host: 0.0.0.0
        port: 5000
    url: http://localhost:5000/
    mimetype: application/json; charset=UTF-8
    encoding: utf-8
    gzip: false
    language: en-US
    cors: true
    pretty_print: true
    limit: 10
    # templates: /path/to/templates
    map:
        url: https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png
        attribution: '<a href="https://wikimediafoundation.org/wiki/Maps_Terms_of_Use">Wikimedia maps</a> | Map data &copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
    ogc_schemas_location: /schemas.opengis.net
    manager:
        name: TinyDB
        connection: /tmp/pygeoapi-process-manager.db
        output_dir: /tmp/

logging:
    level: ERROR
    #logfile: /tmp/pygeoapi.log

metadata:
    identification:
        title: Diving into pygeoapi default instance
        description: pygeoapi provides an API to geospatial data
        keywords:
            - geospatial
            - data
            - api
        keywords_type: theme
        terms_of_service: https://creativecommons.org/licenses/by/4.0/
        url: https://dive.pygeoapi.io
    license:
        name: CC-BY 4.0 license
        url: https://creativecommons.org/licenses/by/4.0/
    provider:
        name: pygeoapi Development Team
        url: https://pygeoapi.io
    contact:
        name: pygeoapi Development Team
        position: pygeoapi Development Team
        address: 9450 SW Gemini Dr. #42523
        city: Beaverton
        stateorprovince: Oregon
        postalcode: 97008
        country: United States of America
        phone: +xx-xxx-xxx-xxxx
        fax: +xx-xxx-xxx-xxxx
        email: pygeoapi@gmail.com
        url: https://pygeoapi.io
        hours: 24/7
        instructions: During hours of service.
        role: pointOfContact

resources:
    # ==== START - STANDARD PYGEOAPI COLLECTIONS ====
    obs:
        type: collection
        title: Observations
        description: My cool observations
        keywords:
            - observations
            - monitoring
        linked-data:
            context:
                - datetime: https://schema.org/DateTime
                - vocab: https://example.com/vocab#
                  stn_id: "vocab:stn_id"
                  value: "vocab:value"
        links:
            - type: text/csv
              rel: canonical
              title: data
              href: https://github.com/mapserver/mapserver/blob/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
            - type: text/csv
              rel: alternate
              title: data
              href: https://raw.githubusercontent.com/mapserver/mapserver/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
        extents:
            spatial:
                bbox: [-180,-90,180,90]
                crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
            temporal:
                begin: 2000-10-30T18:24:39Z
                end: 2007-10-30T08:57:29Z
        providers:
            - type: feature
              name: CSV
              data: tests/data/obs.csv
              id_field: id
              geometry:
                  x_field: long
                  y_field: lat

    lakes:
        type: collection
        title: Large Lakes
        description: lakes of the world, public domain
        keywords:
            - lakes
        links:
            - type: text/html
              rel: canonical
              title: information
              href: https://www.naturalearthdata.com/
              hreflang: en-US
        extents:
            spatial:
                bbox: [-180,-90,180,90]
                crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
            temporal:
                begin: 2011-11-11
                end: null  # or empty
                trs: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
        providers:
            - type: feature
              name: GeoJSON
              data: tests/data/ne_110m_lakes.geojson
              crs:
                - http://www.opengis.net/def/crs/OGC/1.3/CRS84
                - http://www.opengis.net/def/crs/EPSG/0/3857
              storage_crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
              id_field: id

    countries:
        type: collection
        title: Countries of the world
        description: Countries of the world
        keywords:
            - countries
            - natural eart
        links:
            - type: text/html
              rel: canonical
              title: information
              href: https://www.naturalearthdata.com/
              hreflang: en-US
        extents:
            spatial:
                bbox: [-180,-90,180,90]
                crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
            temporal:
                begin:
                end: null  # or empty
        providers:
            - type: feature
              name: SQLiteGPKG
              data: tests/data/ne_110m_admin_0_countries.sqlite
              id_field: ogc_fid
              table: ne_110m_admin_0_countries
    
    # ==== END - STANDARD PYGEOAPI COLLECTIONS ====


    # ==== START - WORKSHOP EXERCISES ====
    # Uncomment a config section between START and END for each exercise.
    # Make sure that indentation matches!

### START - EXERCISE 1 - Your First Collection
#     Bathing_Water_Estonia:
#         type: collection
#         title: Bathing Water Estonia
#         description: Locations where the Estonian Health Board monitors the bathing water quality
#         keywords:
#             - bathingwater
#             - estonia
#         links:
#             - type: text/csv
#               rel: canonical
#               title: data
#               href: https://avaandmed.eesti.ee/datasets/joogiveeallikad
#               hreflang: EE
#         extents:
#             spatial:
#                 bbox: [20,57,29,60]
#                 crs: http://www.opengis.net/def/crs/EPSG/0/4326
#         providers:
#             - type: feature
#               name: CSV
#               data: /data/bathingwater-estonia.csv
#               id_field: id
#               title_field: Name
#               geometry:
#                  x_field: x
#                  y_field: y
#               storage_crs: http://www.opengis.net/def/crs/EPSG/0/3300
### END - EXERCISE 1 - Your First Collection

## START - EXERCISE 2 - cadastral parcels Tartu
#     cp-tartu:
#         type: collection
#         title: Tartu Cadastral Parcels
#         description: Cadasral parcels in downtown Tartu
#         keywords:
#             - Cadastral parcels
#             - Tartu
#         links:
#             -   type: OGC/WFS
#                 rel: canonical
#                 title: data
#                 href: https://metadata.geoportaal.ee/geonetwork/srv/metadata/9949ec81-f758-42e6-9c1c-6fb604a3f053
#                 hreflang: EE
#         extents:
#             spatial:
#                 bbox: [26.6, 58.3, 26.8, 58.5]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: feature
#               name: SQLiteGPKG
#               data: /data/cptartu2.gpkg # place correct path here
#               id_field: nationalca
#               title_field: label
#               table: cptartu2 # table name within gpkg
## END - EXERCISE 2 - cadastral parcels Tartu

## START - EXERCISE 3 - Coverages
#     firenze-terrains:
#         type: collection
#         title: Administrative boundaries before 2014
#         description: Cadastral parcels (terrains) from the cadastre. Territory Agency; SIT and Information Networks;
#         keywords:
#             - Cadastral parcels
#         links:
#             -   type: text/html
#                 rel: canonical
#                 title: Administrative boundaries before 2014
#                 href: http://dati.cittametropolitana.fi.it/geonetwork/srv/metadata/cmfi:419774cb-e812-4ca4-991d-97f0b747e017
#                 hreflang: it
#         extents:
#             spatial:
#                 bbox: [10.70,43.43,11.76,44.25]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             -   type: coverage
#                 name: rasterio
#                 data: /data/53_ED1_G.tif # place correct path here
#                 format:
#                     name: GTiff
#                     mimetype: application/tiff
## END - EXERCISE 3 - Coverages

## START - EXERCISE 4 - Tiles
#     hyderabad:
#         type: collection
#         title: Greater Hyderabad Municipal Corporation ward boundaries
#         description: The city ward boundaries represent the administrative and electoral boundary areas of the city. It plays a great role in planning of the city, for each council of the municipal corporation.
#         keywords:
#            - Boundaries
#            - Administrative
#            - Ward
#         links:
#             - type: text/html
#               rel: canonical
#               title: information
#               href: https://livingatlas-dcdev.opendata.arcgis.com/datasets/a090c89d52f1498f96a82e97b8bfb83e_0/about
#               hreflang: en-US
#         extents:
#             spatial:
#                 bbox: [78.2379194985166180,17.2908061510471995,78.6217049083810764,17.5618443356918768]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#             temporal:
#                 begin: 2011-11-11
#                 end: null  # or empty
#         providers:
#             - type: feature
#               name: GeoJSON
#               data: /data/greater_hyderabad_municipal_corporation_ward_Boundaries.geojson
#               id_field: objectid
#             - type: tile
#               name: MVT
#               data: /data/tiles
#               options:
#                 metadata_format: tilejson # default | tilejson
#                 zoom:
#                     min: 0
#                     max: 16
#                 schemes:
#                     - WorldCRS84Quad
#               format:
#                     name: pbf
#                     mimetype: application/vnd.mapbox-vector-tile
## END - EXERCISE 4 - Tiles

## START - EXERCISE 5 - Maps
#     airports:
#         type: collection
#         title: airports of the world
#         description: Point data representing airports around the world with various metadata such as name, Code, etc.
#         keywords:
#             - airports
#             - natural earth
#         links:
#             - type: text/html
#               rel: canonical
#               title: information
#               href: https://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/
#               hreflang: en-US
#         extents:
#             spatial:
#                 bbox: [-180,-90,180,90]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#             temporal:
#                 begin:
#                 end: null  # or empty
#         providers:
#             - type: map
#               name: MapScript
#               data: /data/airport.gpkg
#               options:
#                   type: MS_LAYER_POINT
#                   layer: airport
#                   style: /data/airport.sld
#               format:
#                   name: png
#                   mimetype: image/png
## END - EXERCISE 5 - Maps

## START - EXERCISE 6 - Metadata
#     example_catalogue:
#         type: collection
#         title: FOSS4G Florence Record catalogue
#         description: FOSS4G Florence Record catalogue (OGC API - Records)
#         keywords:
#             - Services
#             - Infrastructures
#             - Florence
#             - FOSS4G
#         links:
#             - type: text/html
#               rel: canonical
#               title: information
#               href: http://opendata.comune.firenze.it
#               hreflang: en-US
#         extents:
#             spatial:
#                 bbox: [11.145, 43.718, 11.348, 43.84]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: record
#               name: TinyDBCatalogue
#               data: /data/records/catalogue.tinydb
#               id_field: externalId
#               time_field: recordCreated
#               title_field: title
## END - EXERCISE 6 - Metadata

## START EXERCISE 7 - Environmental data via OGC API - Environmental Data Retrieval
#     icoads-sst:
#         type: collection
#         title: International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
#         description: International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
#         keywords:
#             - icoads
#             - sst
#             - air temperature
#         extents:
#             spatial:
#                 bbox: [-180,-90,180,90]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#             temporal:
#                 begin: 2000-01-16T06:00:00Z
#                 end: 2000-12-16T06:00:00Z
#         links:
#             - type: text/html
#               rel: canonical
#               title: information
#               href: https://psl.noaa.gov/data/gridded/data.coads.1deg.html
#               hreflang: en-US
#         providers:
#             - type: edr
#               name: xarray-edr
#               data: /data/coads_sst.nc
#               format:
#                   name: NetCDF
#                   mimetype: application/x-netcdf
## END EXERCISE 7 - Environmental data via OGC API - Environmental Data Retrieval

    hello-world:
        type: process
        processor:
            name: HelloWorld

## START EXERCISE 8 - Functions via OGC API - Processes
    # squared:
    #     type: process
    #     processor:
    #         name: pygeoapi.process.squared.SquaredProcessor
## END EXERCISE 8 - Functions via OGC API - Processes


## START - EXERCISE 9 - WFS Proxy
#     suol_epicentri_storici:
#         type: collection
#         title: Epicenters of the main historical earthquakes
#         description: Location of the epicenters of the main historical earthquakes in the territory of the Metropolitan City of Florence classified by year and intensity
#         keywords:
#             - earthquakes
#         links:
#             - type: text/xml
#               rel: canonical
#               title: Epicenters of the main historical earthquakes
#               href: http://pubblicazioni.cittametropolitana.fi.it/geoserver/territorio/wfs?request=getCapabilities&service=WFS&version=2.0.0
#               hreflang: it
#         extents:
#             spatial:
#                 bbox: [10.94, 43.52, 11.65, 44.17]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: feature
#               name: OGR
#               data:
#                     source_type: WFS
#                     source: WFS:http://pubblicazioni.cittametropolitana.fi.it/geoserver/territorio/wfs?
#                     source_capabilities:
#                         paging: True
#                     source_options:
#                         OGR_WFS_LOAD_MULTIPLE_LAYER_DEFN: NO
#                     gdal_ogr_options:
#                         EMPTY_AS_NULL: NO
#                         GDAL_CACHEMAX: 64
#                         CPL_DEBUG: NO
#               id_field: cpti_id
#               crs:
#                 - http://www.opengis.net/def/crs/OGC/1.3/CRS84
#                 - http://www.opengis.net/def/crs/EPSG/0/4258
#                 - http://www.opengis.net/def/crs/EPSG/0/3857
#                 - http://www.opengis.net/def/crs/EPSG/0/3003
#               storage_crs: http://www.opengis.net/def/crs/EPSG/0/3003
#               title_field: d
#               layer: territorio:suol_epicentri_storici
## END - EXERCISE 9 - WFS Proxy

## START - EXERCISE 9 - WMS Proxy
#     wms-facade-demo:
#         type: collection
#         title: WMS Facade demo
#         description: WMS Facade demo
#         keywords:
#             - WMS facade
#         links:
#             - type: text/html
#               rel: canonical
#               title: MapServer
#               href: https://mapserver.org
#               hreflang: it
#         extents:
#             spatial:
#                 bbox: [-180,-90,180,90]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: map
#               name: WMSFacade
#               data: https://demo.mapserver.org/cgi-bin/msautotest
#               options:
#                 layer: world_latlong
#                 style: default
#               format:
#                 name: png
#                 mimetype: image/png
## END - EXERCISE 9 - WMS Proxy

## START - EXERCISE 9 - CSW Proxy
#     cite_demo:
#         type: collection
#         title: pycsw OGC CITE demo and Reference Implementation
#         description: pycsw is an OARec and OGC CSW server implementation written in Python. pycsw fully implements the OGC API - Records and OpenGIS Catalogue Service Implementation Specification (Catalogue Service for the Web). Initial development started in 2010 (more formally announced in 2011). The project is certified OGC Compliant, and is an OGC Reference Implementation. Since 2015, pycsw is an official OSGeo Project. pycsw allows for the publishing and discovery of geospatial metadata via numerous APIs (CSW 2/CSW 3, OpenSearch, OAI-PMH, SRU). Existing repositories of geospatial metadata can also be exposed, providing a standards-based metadata and catalogue component of spatial data infrastructures. pycsw is Open Source, released under an MIT license, and runs on all major platforms (Windows, Linux, Mac OS X)
#         keywords:
#             - ogc
#             - cite
#             - compliance
#             - interoperability
#         extents:
#             spatial:
#                 bbox: [-180,-90,180,90]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: record
#               name: CSWFacade
#               data: https://demo.pycsw.org/cite/csw
#               id_field: identifier
#               time_field: datetime
#               title_field: title
## END - EXERCISE 9 - CSW Proxy

## START - EXERCISE 9 - SensorThings Proxy
#     toronto_bikes:
#         type: collection
#         title: Toronto Bikes SensorThings
#         description: The geographic location with coordinates for the Toronto bike share station
#         keywords:
#             - sediments
#         extents:
#             spatial:
#                 bbox: [-180,-90,180,90]
#                 crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
#         providers:
#             - type: feature
#               name: SensorThings
#               data: https://toronto-bike-snapshot.sensorup.com/v1.0/
#               entity: Things
## END - EXERCISE 9 - SensorThings Proxy
